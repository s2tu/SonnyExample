import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import com.domains.BankAccount;

import exceptions.InsufficientBalanceException;
import exceptions.InvalidInputException;

public class ValidInputOutputTest {
	BankAccount dummy;
	@Before
	public void init(){
		 dummy = new BankAccount("Dummy", 23232, 1);
	}
	@Test
	public void testReturnWithdrawDouble() {
		try {
			assertEquals(dummy.withdraw(1).getClass(), Double.class);
		} catch (InsufficientBalanceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidInputException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}
	
	@Test
	public void testReturnDepositDouble() {
		try {			
			assertEquals(dummy.deposit(1).getClass(), Double.class);		
		} catch (InsufficientBalanceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidInputException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
	}	
	@Test
	public void testInputPositive() {
		fail("Not yet implemented");
	}
	@Test
	public void testWithDrawShouldNotBeNegative() {
		fail("Not yet implemented");
	}	
	@Test
	public void testIssufficentBalance() {
		fail("Not yet implemented");
	}		
}
